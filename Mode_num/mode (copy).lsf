x0=0;y0=0;z0=0;
L_MMI = 10e-6;
W_MMI = 0.5e-6;
h_a = 220e-9;

len = L_MMI;
width = W_MMI + 8e-6;
height = h_a + 8e-6;

addrect;
rect_name = "SiO2";
set( "name", rect_name );
set("x",x0);
set("x span",len);
set("y",y0);
set("y span",width);
set("z",z0);
set("z span",height);
set("material","SiO2 (Glass) - Palik");
set('alpha',0.2);
############################################
##add the MMI core
addrect;
set( "name", "MMI_core" );
set("x",x0);
set("x span",L_MMI);
set("y",y0);
set("y span",W_MMI);
set("z",z0);
set("z span",h_a);
set("material","Si (Silicon) - Palik");
############################################

#add the simulation region;
addfde;
set("solver type",  "2D x normal");
set("x",x0);
set("y",y0);
set("y span", W_MMI+4e-6);
set("z",z0);
set("z span",h_a+2e-6);
set("define y mesh by","maximum mesh step" );
set("dy", 10e-9);
set("define z mesh by","maximum mesh step" );
set("dz", 10e-9);
set("min mesh step",1e-9 );

num_wl = 30;
num_mode = 4;
wl_range = linspace(1.3, 1.6 ,num_wl)*1e-6;
setanalysis("number of trial modes",num_mode);
analysis;

neff = matrix(num_wl,num_mode);
TE_pol = matrix(num_wl,num_mode);
# actually you should use frequencysweep
for(ii = 1:1:num_wl)
{
    switchtolayout;
    setanalysis("wavelength",wl_range(ii));
    n=findmodes; 
    for(m=1:1:num_mode)
    {
        # extract mode data
        neff (ii,m) = abs( getdata("FDE::data::mode"+num2str(m),"neff") );
        TE_pol(ii,m)= getdata("FDE::data::mode"+num2str(m),"TE polarization fraction");
    }
}
matlabsave("neff_220H_1300nmTo1600nm.mat",neff,TE_pol);