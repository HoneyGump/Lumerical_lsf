################################################################################
#                         main code
################################################################################
clear;
#########################################################################################
# set your simulation type
type_simulation = 0; # 0 is Mode; 1 is FDTD;
#########################################################################################
# 0 for Coupler coefficient; 1 for Mode numbers; 2 for 1X2 splitter; 3 for 2X2 Coupler
# 4 for one bend; 5 for two circle 6 for antenna; 7 for filed
ProcessNum = 1;
#########################################################################################
# export the design
isExport = 1; # 1 is not expoet; 2 is export;
#########################################################################################
# isRun
isRun = 0; # 0 is not run; 1 is run;
#########################################################################################
# set your file directory
dir_file = "/8000G/chencheng/Lumerical/Endfire_Lidar_pro/";
#dir_file = "D:/OneDrive - shanghaitech.edu.cn/Document_software/Lumerical/";
#########################################################################################
addpath("/8000G/chencheng/Lumerical/Endfire_Lidar/");
#addpath("D:/OneDrive - shanghaitech.edu.cn/Document_software/Lumerical/Endfire_Lidar");
#addpath("D:/OneDrive - shanghaitech.edu.cn/Document_software/Lumerical/Endfire_Lidar/subFunction");
#########################################################################################
if(type_simulation == 1){type_file='.fsp';}
if(type_simulation == 0){type_file='.lms';}else{type_file='';}
####################
# some setting about simulation
mesh_max = 40e-9;
time_simulation = 5000e-15;
mesh_accuracy = 2;

#decimal_3;

#########################################################################################
wl = 1550e-9; # wl is the wavelength ;
d = 775e-9; # d is the pitch of antennas;

ext_length_x = 1e-6;
ext_length_y = 1e-6;
ext_length_z = ext_length_y;

l_a = ext_length_x*1;   # l_a is the "unit length" of waveguide;
w_a = 500e-9; # w_a is the width of waveguide;
h_a = 250e-9; # h_a is the height of Si;


#########################################################################################


if(ProcessNum  == 0)
{
    filename = "Waveguide_d2"+type_file;
}
if(ProcessNum  == 1)
{    
        # Here is the parameters of the 1*2 MMI coupler.
    L_MMI_12 = 13.93e-6; # L_MMI is the length of MMI core;
    W_MMI_12 = 500e-9; # W_MMI is the width of MMI core;
    S1_12 = W_MMI_12/2;# S2 is the distance of the right tapers;
    S2_12 = W_MMI_12/2;# S2 is the distance of the right tapers;
    Pl1_12 = 20e-6;# pl1 is the length of the left taper;
    Pl2_12 = 20e-6;# pl2 is the length of the right taper;
    Pw2_12 = S2_12; # Pw is the width of the right taper;
    Pw1_12 = Pw2_12; #Pw is the width of the left taper;
    shift_12 = 100e-9; # shift is the shift position of the taper;
    L_str1 = num2str(floor(L_MMI_12*1e6))+"_"+num2str((L_MMI_12*1e6-floor(L_MMI_12*1e6))*1e2);
    filename = "Mode_nums_"+num2str(W_MMI_12*1e6)+"X"+num2str(h_a*1e9)+"X"+L_str1+type_file;
}
if(ProcessNum  == 2)
{
    # Here is the parameters of the 1*2 MMI coupler.
    L_MMI_12 = 13.93e-6; # L_MMI is the length of MMI core;
    W_MMI_12 = 4e-6; # W_MMI is the width of MMI core;
    S1_12 = W_MMI_12/2;# S2 is the distance of the right tapers;
    S2_12 = W_MMI_12/2;# S2 is the distance of the right tapers;
    Pl1_12 = 20e-6;# pl1 is the length of the left taper;
    Pl2_12 = 20e-6;# pl2 is the length of the right taper;
    Pw2_12 = S2_12; # Pw is the width of the right taper;
    Pw1_12 = Pw2_12; #Pw is the width of the left taper;
    shift_12 = 100e-9; # shift is the shift position of the taper;
    
    L_str1 = num2str(floor(L_MMI_12*1e6))+"_"+num2str((L_MMI_12*1e6-floor(L_MMI_12*1e6))*1e2);
    filename = "MMI_3dBSplitter_"+num2str(W_MMI_12*1e6)+"X"+num2str(h_a*1e9)+"X"+L_str1+type_file;
}
if(ProcessNum  == 3)
{
    # Here is the parameters of the 2*2 MMI coupler.
    L_MMI_22 = 18.7e-6; # L_MMI is the length of MMI core;
    W_MMI_22 = 4e-6; # W_MMI is the width of MMI core;
    S1_22 = W_MMI_22/3; #S1 is the distance of the left tapers;
    S2_22 = W_MMI_22/3; #S2 is the distance of the right tapers;
    
    S1_22 = decimal3(S1_22);
    S2_22 = decimal3(S2_22);
    
    Pl1_22 = 20e-6; #pl is the length of the left taper;
    Pw1_22 = S1_22; #Pw is the width of the left taper;
    Pl2_22 = 20e-6; #pl2 is the length of the right taper;
    Pw2_22 = S2_22; #Pw is the width of the right taper;
    shift_22 = 100e-9; #the shift position of the taper;
    
    L_str2 = num2str(floor(L_MMI_22*1e6))+"_"+num2str((L_MMI_22*1e6-floor(L_MMI_22*1e6))*1e2);
    filename = "MMI_3dBCoupler_"+num2str(W_MMI_22*1e6)+"X"+num2str(h_a*1e9)+"X"+L_str2+type_file;
}
if(ProcessNum  == 4)
{
    d_grating = 127e-6;
    S = 3e-6;
    
    w_hot = (d_grating-S)/2; #distance of   new and old waveguide;
    l_bg = 100e-6; #length of bend waveguide;
    
    shift_build = 16e-9;
    
    # for two bend;
    isBend = 2;
    
    #filename = "Bend_"+num2str(floor(w_hot*1e6))+"X"+num2str(l_bg*1e6)+type_file;
    filename = "Bend_"+num2str(floor(S*1e6))+"_127_L"+num2str(l_bg*1e6)+type_file;
}
if(ProcessNum  == 6)
{
    pitch = 0.66e-6;
    n_periods = 45;
    Ny = 1;
    ay = 1.334e-6;
    width2 = 0.8e-6;
    
    filename = "antenna_"+type_file;
}
if(ProcessNum  == 7)
{    
    filename = "field_"+type_file;
}
N =16;
d_phase = 100e-6;
l_bg = 100e-6; #length of bend waveguide;

theta = 90;    # sin function is same as matlab, but here don't have sind
r0 = 5e-6;   # r0 is the radius of output;
r1 = 25e-6;  # r1 is the radius of below circle;
r2 = 25e-6;  # r2 is the radius of uper circle;
# d = 775e-6; d have been defined.
d2 = 3e-6;   # d2 is the distance of horizontal waveguides;
d3 = 3e-6; # d3 is the distance of vertical waveguides;
d4 = 100e-6;  # d4 is the distance of adjacent phase modulator.

# here is some parameters for bend;

shift_x1 = 0e-6; #
shift_y2 = 0e-6;

x0=0;y0=0;z0=0;

if(isExport == 2)
{
    type_simulation = -1; #this will do not build the simulation region;
    #l_a = 0;
    addpath("D:/OneDrive - shanghaitech.edu.cn/Document_software/Lumerical/GDS_export");
    w_a = w_a + 30e-9;
       
    if(ProcessNum  == 2)
    {
        W_MMI_12 = W_MMI_12 + 30e-9;
        Pw1_12  = Pw1_12 + 30e-9;
        Pw2_12 = Pw2_12 + 30e-9;
    }
    
    if(ProcessNum  == 3)
    {
        W_MMI_22 = W_MMI_22 + 30e-9;
        Pw1_22  = Pw1_22 + 30e-9;
        Pw2_22 = Pw2_22 + 30e-9;
    }
    
    if(ProcessNum  == 6)
    {
        width2 = width2 +30e-9;
    }
    
}

filename_temp = filename;

####################
for( j = 1:isExport)
{
    if(isExport == 2)
    {
        filename = filename_temp +"_export_" +num2str(j);
    }
    if(j == 2)
    {
        w_a = w_a+6e-6;
        
        if(ProcessNum  == 2)
        {
            W_MMI_12 = W_MMI_12 + 6e-6;
            Pw2_12 = Pw2_12 + 6e-6;
            Pw1_12 = Pw1_12 + 6e-6;
        }
        if(ProcessNum  == 3)
        {
            W_MMI_22 = W_MMI_22 + 6e-6;
            Pw2_22 = Pw2_22 + 6e-6;
            Pw1_22 = Pw1_22 + 6e-6;
        }
        if(ProcessNum  == 6)
        {
            width2 = width2 + 6e-6;
        }
    }
    
    
    ## NO. Coupler coefficient:
    if(ProcessNum  == 0)
    {
        d = 1.334e-6;
        Body_DirectionCoupler;
        # coherent length is lambda/delta_n; lambda is the lambda in vacuum;
        # 1550mm for d = 2 um;
        # 
    }
    
    ## NO. Mode numbers of MMI core:
    if (ProcessNum  == 1)
    {
        L_MMI = L_MMI_12;
        W_MMI = W_MMI_12;
        Body_MMI_core_mode_num;
    }
    
    ## NO. 1*2 MMI coupler:
    if(ProcessNum  == 2)
    {
        Body_MMI_3dBSplitter;
        if(type_simulation == 0 )
        {
            ############################################
            # change the default setting
            select("EME");
            #set("allow custom eigensolver settings",0);# mode numbers of group 1 can be set less than others; so we can't set partly
            set("number of modes for all cell groups",20);
            set("define y mesh by","maximum mesh step" ); set("dy", 0.035e-6);
            set("define z mesh by","maximum mesh step" ); set("dz", 0.035e-6);
            set("min mesh step",0.02e-6 );
            #set("cells",[1;60;1;60;1]);
            ############################################v
        }
        if(type_simulation == 1)
        {
            select("FDTD");
            set("min mesh step",0.02e-6 );
        }
    }
    
    
    ## NO. 2*2 MMI coupler:
    if(ProcessNum  == 3)
    {
        Body_MMI_3dBCoupler;
        if(type_simulation == 0 )
        {
            ############################################
            # change the default setting
            select("EME");
            #set("allow custom eigensolver settings",0);# mode numbers of group 1 can be set less than others; so we can't set partly
            set("number of modes for all cell groups",20);
            set("define y mesh by","maximum mesh step" ); set("dy", 0.035e-6);
            set("define z mesh by","maximum mesh step" ); set("dz", 0.035e-6);
            set("min mesh step",0.02e-6 );
            #set("cells",[1;60;1;60;1]);
            ############################################v
        }
        if(type_simulation == 1)
        {
            select("FDTD");
            set("min mesh step",0.02e-6 );
        }
    }
    
    ## NO. bend waveguides
    if(ProcessNum  == 4)
    {
        Body_bend;
        if(type_simulation == 0)
        {
            select("varFDTD");
            set("min mesh step",0.02e-6 );
        }
        if(type_simulation == 1)
        {
            select("FDTD");
            set("min mesh step",0.02e-6 );
        }
    }
    if(ProcessNum  == 6)
    {
        Body_antenna;
    }
    
    if(ProcessNum  == 7)
    {
        Body_field;
    }
}

#############
# run and data
#############
if(isRun == 1)
{
    if(type_simulation == 0)
    {
        if(ProcessNum == 0)
        {
            run;save;
        }
        if( ProcessNum == 2 )
        {
            run;emepropagate;save;
            printfSMatrix;
            plotSMatrix;
            plotProfileMiddle_eme;
            ?"Everything is END!";
        }
        if(ProcessNum == 4)
        {
            run;save;
        }
    }
    if(type_simulation == 1)
    {
        run;save;
        printfTransmition;
        plotProfileMiddle;
    }
}


?"Code is finished.";
#end.
################################################################################
# calculate the L_pi;
# Method1:
#n0 = 2.841676;
#n1 = 2.822034;
#L_pi = pi/(n0-n1)/(2*pi/wl);
#?"L_pi is "+ num2str(L_pi*1e6)+ "um";
## Method 2 :
#n_si = 3.4771;
#L_pi = 4*n_si*W_MMI_22^2/3/wl;
#?"L_pi is "+ num2str(L_pi*1e6)+ "um";
#####################################################################################
